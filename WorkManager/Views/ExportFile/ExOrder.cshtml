@using WebCore.Entities;
@using WebCore.Services;
@using WebCore.Model.Enum;
@using WebCore.Model.Services;
@using WebCore.ENM;
@{
    ViewBag.Title = Helper.Page.MetaSEO.MetaTitle;
    Layout = "~/Areas/Template/Views/Shared/_Blank.cshtml";
}
@model  WebCore.Entities.ViewBookOrder
@{
    if (Model != null)
    {
        List<BookTicket> bookTickets = Model.BookTickets;
        List<BookPassenger> bookPassengers = Model.BookPassengers;
        List<BookPrice> bookPrices = Model.BookPrices;
        List<BookTax> bookTaxes = Model.BookTaxs;
        List<BookCustomer> bookContacts = Model.BookCustomers;
        BookAgent bookAgent = Model.BookAgent;
        <section>
            <div class="row">
                <div class="container-fluid mgt-20">
                    <label style="font-size:18px;">THÔNG TIN ĐẶT VÉ MÁY BAY !</label>
                    <hr />
                    <label id="lblPNRCode" data-pnr="@Model.PNR" style="color:#ff0000; font-size:16px;"><i style="color:#ff0000; font-size:16px;" class="fas fa-qrcode"></i> PNR: @Model.PNR</label>
                </div>
            </div>
            <div class="table-responsive mgb-20">
                <table id="TblFlight" class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="text-left tbcol-id ">Hãng</th>
                            <th>Số hiệu</th>
                            <th>Hành trình</th>
                            <th>Ngày bay</th>
                            <th>Giờ xuất phát</th>
                            <th>Giờ đến</th>
                            <th class="text-center">Hạng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (bookTickets != null && bookTickets.Count() > 0)
                        {
                            foreach (var item in bookTickets)
                            {
                                <tr>
                                    <td class="text-right">
                                        <label class="lblTrademark">VNA</label>
                                    </td>
                                    <td>
                                        <i class="fa fa-plane" aria-hidden="true"></i> <label class="lblFlightNo">VN @item.AirEquipType</label> <label>@item.FlightNumber</label>
                                    </td>
                                    <td>
                                        <label class="lblItinerary">@item.OriginLocation - @item.DestinationLocation; @item.DepartureDateTime.ToString("dd-MM-yyyy")</label>
                                    </td>
                                    <td>
                                        <span class="lblItineraryTime">@item.DepartureDateTime.ToString("dd-MM-yyyy")</span>
                                    </td>
                                    <td>
                                        <span class="lblItineraryTime">@item.DepartureDateTime.ToString("HH:mm:ss")</span>
                                    </td>
                                    <td>
                                        <span class="lblItineraryTime">@item.ArrivalDateTime.ToString("HH:mm:ss")</span>
                                    </td>
                                    <td class="text-center">
                                        <label class="lblResbookdesigcode">@item.ResBookDesigCode</label>
                                    </td>
                                </tr>
                            }
                        }

                    </tbody>
                </table>
            </div>
            <div class="form-group mgb-10">
                <label><i class="fa fa-info-circle" aria-hidden="true"></i> Thông tin hành khách:</label>
            </div>
            <div class="table-responsive mgb-20">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="tbcol-id">#</th>
                            <th style="width:60px;">Loại HK</th>
                            <th>Họ và Tên</th>
                            <th>Giới tính</th>
                            <th>Ngày sinh</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (bookPassengers != null && bookPassengers.Count() > 0)
                        {
                            int cnt = 0;
                            foreach (var item in bookPassengers.GroupBy(m => new { m.PassengerType }).Select(m => new { m.Key.PassengerType }))
                            {
                                var list = bookPassengers.Where(m => m.PassengerType == item.PassengerType).ToList();
                                string _rowspan = "";
                                if (list.Count() > 1)
                                {
                                    _rowspan = " rowspan=" + @list.Count();
                                }

                                for (int i = 0; i < list.Count(); i++)
                                {
                                    cnt++;

                                    string gender = WebCore.Services.BookTicketService.ConvertToGenderName(list[i].Gender);
                                    string birthDay = Helper.TimeData.TimeFormat.FormatToViewDate(list[i].DateOfBirth, Helper.Language.LanguagePage.GetLanguageCode);
                                    <tr>
                                        <td class="text-right">@cnt &nbsp;</td>
                                        @if (i == 0)
                                        {
                                            <td style="vertical-align:middle;" @(i == 0 ? _rowspan : "")>- @list[i].PassengerType</td>
                                        }
                                        <td>@list[i].FullName</td>
                                        <td>@gender</td>
                                        <td>@birthDay</td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>

            <div class="form-group mgb-10">
                <label><i class="fa fa-info-circle" aria-hidden="true"></i> Chi phí:</label>
            </div>
            @{
                int price_colspan = bookPrices.Count();
                List<string> passengerTypeList = bookPrices.GroupBy(m => m.PassengerType).OrderBy(m => m.Key).Select(m => m.Key).ToList();

            }
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="tbcol-id">#</th>
                            <th style="width:140px;">Loại hành khách</th>
                            @if (passengerTypeList.Count > 0)
                            {
                                foreach (var item in passengerTypeList)
                                {
                                    <th class="text-center" style="width:160px;">@item</th>
                                }
                            }
                            <th class="text-right">Tổng</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="text-center" valign="middle" rowspan="3">Giá</td>
                            <td>Chiều đi</td>
                            @{
                                double totalRow1 = 0;
                                if (passengerTypeList.Count > 0)
                                {
                                    List<BookPrice> bookPrices1 = bookPrices.Where(m => m.FlightType == 1).ToList();
                                    foreach (var item in passengerTypeList)
                                    {
                                        double amount = bookPrices1.Where(m => m.PassengerType == item).Sum(m => m.Amount);
                                        totalRow1 += amount;
                                        <td class="text-right">@Helper.Page.Library.FormatCurrency(amount) đ</td>
                                    }
                                }
                                else
                                {
                                    <td colspan="@passengerTypeList.Count()"></td>
                                }
                            }
                            <td class="text-right">@Helper.Page.Library.FormatCurrency(totalRow1) đ</td>
                        </tr>
                        <tr>
                            <td>Chiều về</td>
                            @{
                                double totalRow2 = 0;
                                if (passengerTypeList.Count > 0)
                                {
                                    List<BookPrice> bookPrices2 = bookPrices.Where(m => m.FlightType == 2).ToList();
                                    foreach (var item in passengerTypeList)
                                    {
                                        double amount = bookPrices2.Where(m => m.PassengerType == item).Sum(m => m.Amount);
                                        totalRow2 += amount;
                                        <td class="text-right">@Helper.Page.Library.FormatCurrency(amount) đ</td>
                                    }
                                }
                                else
                                {
                                    <td colspan="@passengerTypeList.Count()"></td>
                                }
                            }
                            <td class="text-right">@Helper.Page.Library.FormatCurrency(totalRow2) đ</td>
                        </tr>
                        <tr>
                            <td class="bg-success">Tổng/LHK</td>
                            @{
                                double priceTotalAll = 0;
                                if (passengerTypeList.Count > 0)
                                {
                                    foreach (var item in passengerTypeList)
                                    {
                                        double totalLkh = bookPrices.Where(m => m.PassengerType == item).Sum(m => m.Amount);
                                        priceTotalAll += totalLkh;
                                        <td class="text-right bg-success">@Helper.Page.Library.FormatCurrency(totalLkh) đ</td>
                                    }
                                }
                                else
                                {
                                    <td colspan="@passengerTypeList.Count()"></td>
                                }
                            }
                            <td class="text-right bg-success">@Helper.Page.Library.FormatCurrency(priceTotalAll) đ</td>
                        </tr>
                        @{
                            if (bookTaxes.Count > 0)
                            {
                                List<string> taxCodes = bookTaxes.GroupBy(m => new { m.TaxCode }).Select(m => m.Key.TaxCode).ToList();
                                int cntTax = 0;
                                foreach (var itemTax in taxCodes)
                                {
                                    <tr>
                                        @if (cntTax == 0)
                                        {
                                            <td class="text-center" valign="middle" rowspan="@Convert.ToInt32(taxCodes.Count() + 1)">Tax</td>
                                        }
                                        <td>@itemTax</td>
                                        @{
                                            if (passengerTypeList.Count > 0)
                                            {
                                                foreach (var item in passengerTypeList)
                                                {
                                                    double taxAmount = bookTaxes.Where(m => m.PassengerType == item && m.TaxCode == itemTax).Sum(m => m.Amount);
                                                    <td class="text-right">@Helper.Page.Library.FormatCurrency(taxAmount) đ</td>
                                                }
                                            }
                                            else
                                            {
                                                <td colspan="@passengerTypeList.Count()"></td>
                                            }
                                        }
                                        <td></td>
                                    </tr>
                                    cntTax++;
                                }
                            }

                        }
                        <tr>
                            <td class="bg-success">Tổng/LHK</td>
                            @{
                                double taxTotalAll = 0;
                                if (passengerTypeList.Count > 0)
                                {
                                    foreach (var item in passengerTypeList)
                                    {
                                        double totalLkh = bookTaxes.Where(m => m.PassengerType == item).Sum(m => m.Amount);
                                        taxTotalAll += totalLkh;
                                        <td class="text-right bg-success">@Helper.Page.Library.FormatCurrency(totalLkh) đ</td>
                                    }
                                }
                                else
                                {
                                    <td colspan="@passengerTypeList.Count()"></td>
                                }
                            }
                            <td class="text-right bg-success">@Helper.Page.Library.FormatCurrency(taxTotalAll) đ</td>
                        </tr>
                        @{
                            double agentFee = 0;
                            double agentPrice = 0;
                            double providerFee = 0;
                            if (bookAgent != null)
                            {
                                providerFee = bookAgent.ProviderFee;
                                agentFee = bookAgent.AgentFee;
                            }
                        }
                        <tr>
                            <td rowspan="2">Phí dịch vụ</td>
                            <td class="">Phí xuất vé</td>
                            <td colspan="@passengerTypeList.Count()" class="text-right">@Helper.Page.Library.FormatCurrency(providerFee) đ</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Đại lý</td>
                            <td colspan="@passengerTypeList.Count()" class="text-right">@Helper.Page.Library.FormatCurrency(agentFee) đ</td>
                            <td></td>
                        </tr>
                        <tr>
                            <td>Tổng</td>
                            <td class="text-right bg-danger" colspan="@Convert.ToInt32(passengerTypeList.Count() + 2)">@Helper.Page.Library.FormatCurrency(priceTotalAll + taxTotalAll + providerFee + agentFee) đ</td>
                        </tr>
                    </tbody>
                </table>
            </div>
            <div class="form-group mgb-10">
                <label><i class="fa fa-info-circle" aria-hidden="true"></i> Thông tin liên hệ:</label>
            </div>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="tbcol-id">#</th>
                            <th>Họ và Tên</th>
                            <th>Số điện thoại</th>
                            <th>Địa chỉ e-mail</th>
                        </tr>
                    </thead>
                    <tbody>

                        @if (bookContacts.Count > 0)
                        {
                            foreach (var item in bookContacts)
                            {
                                <tr>
                                    <th class="tbcol-id">01</th>
                                    <td>@item.Name</td>
                                    <td>@item.Phone</td>
                                    <td>@item.Email</td>
                                </tr>

                            }
                        }

                    </tbody>
                </table>
            </div>

            <div class="form-group mgb-10">
                <label><i class="fa fa-info-circle" aria-hidden="true"></i> Nhân viên xuất vé:</label>
            </div>
            <div class="container-fluid m-b-20" style="background: #a2d5d0;">
                @if (bookAgent != null)
                {
                    <div class="col-md-5">
                        <div class="form-group mgt-20">
                            <br />
                            <label class="form-label">Họ tên: @bookAgent.TicketingName</label>
                        </div>
                        <div class="form-group ">
                            <label class="form-label">Số đ.thoại: @bookAgent.TicketingPhone</label>
                        </div>
                        <div class="form-group ">
                            <label class="form-label">Địa chỉ e-mail:  @bookAgent.TicketingEmail</label>
                        </div>
                    </div>
                }
            </div>
            @{
                if (PermissionService.CheckActionInMenuItem(Helper.Page.MetaSEO.ControllerText, WebCore.Entities.RoleActionKey.DataList))
                {
                    <div class="form-group text-right att-data-list">
                        <a href="@Helper.Page.Navigate.PathDataList()">
                            @Helper.Language.Resource.Label.DataList <i class="fas fa-arrow-circle-right"></i>
                        </a>
                    </div>
                }
            }
        </section>
    }
}

